apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: "com.mob.sdk"

////获取local.properties的内容
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
android {

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    signingConfigs {
        release {
            storeFile file(properties.getProperty("keystroe_storeFile"))
            storePassword properties.getProperty("keystroe_storePassword")
            keyAlias properties.getProperty("keystroe_keyAlias")
            keyPassword properties.getProperty("keystroe_keyPassword")
        }

    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        multiDexEnabled true
        applicationId "com.jlbeauty.read"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
        rongteng {
            applicationId 'com.jlbeauty.read'
            resValue("string", "app_name", "美读会")
            resValue("string", "fileprovider", "com.jlbeauty.read.fileprovider")
            buildConfigField("String", "SERVER_URL", properties.getProperty("api_jlbeauty_url"))
            buildConfigField("String", "SERVER_URL_M", properties.getProperty("api_m_jlbeauty_url"))
        }

        rongteng_test {
            applicationId 'com.jlbeauty.read.test'
            resValue("string", "app_name", "测试环境")
            resValue("string", "fileprovider", "com.jlbeauty.read.fileprovider")
            buildConfigField("String", "SERVER_URL", properties.getProperty("test_jlbeauty_url"))
            buildConfigField("String", "SERVER_URL_M", properties.getProperty("test_m_jlbeauty_url"))
        }

    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}
repositories {
    maven { url "https://jitpack.io" }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
    testCompile 'junit:junit:4.12'

    apt 'com.zhy:mpermission-compiler:1.0.0'
    compile 'com.zhy:mpermission-api:1.0.0'

    releaseCompile project(path: ':base', configuration: 'release')
    debugCompile project(path: ':base', configuration: 'debug')
}
